{"version":3,"sources":["meteor://ðŸ’»app/lib/server/migrations.js"],"names":[],"mappings":"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","file":"/packages/telescope_migrations.js","sourcesContent":["// TODO: switch over to Tom's migration package.\n\n// database migrations\n// http://stackoverflow.com/questions/10365496/meteor-how-to-perform-database-migrations\nMigrations = new Meteor.Collection('migrations');\n\nMeteor.startup(function () {\n  allMigrations = Object.keys(migrationsList);\n  _.each(allMigrations, function(migrationName){\n    runMigration(migrationName);\n  });\n});\n\nMeteor.methods({\n  removeMigration: function (name) {\n    check(name, String);\n    if (Users.is.admin(Meteor.user())) {\n      console.log('// removing migration: ' + name);\n      Migrations.remove({name: name});\n    }\n  }\n});\n\n// wrapper function for all migrations\nvar runMigration = function (migrationName) {\n  var migration = Migrations.findOne({name: migrationName});\n\n  if (migration){\n    if(typeof migration.finishedAt === 'undefined'){\n      // if migration exists but hasn't finished, remove it and start fresh\n      console.log('!!! Found incomplete migration \"'+migrationName+'\", removing and running again.');\n      Migrations.remove({name: migrationName});\n    }else{\n      // do nothing\n      // console.log('Migration \"'+migrationName+'\" already exists, doing nothing.')\n      return;\n    }\n  }\n\n  console.log(\"//----------------------------------------------------------------------//\");\n  console.log(\"//------------//    Starting \"+migrationName+\" Migration    //-----------//\");\n  console.log(\"//----------------------------------------------------------------------//\");\n  Migrations.insert({name: migrationName, startedAt: new Date(), completed: false});\n\n  // execute migration function\n  var itemsAffected = migrationsList[migrationName]() || 0;\n\n  Migrations.update({name: migrationName}, {$set: {finishedAt: new Date(), completed: true, itemsAffected: itemsAffected}});\n  console.log(\"//----------------------------------------------------------------------//\");\n  console.log(\"//------------//     Ending \"+migrationName+\" Migration     //-----------//\");\n  console.log(\"//----------------------------------------------------------------------//\");\n};\n\nvar migrationsList = {\n  updatePostStatus: function () {\n    var i = 0;\n    Posts.find({status: {$exists : false}}).forEach(function (post) {\n      i++;\n      Posts.update(post._id, {$set: {status: 2}});\n      console.log(\"---------------------\");\n      console.log(\"Post: \"+post.title);\n      console.log(\"Updating status to approved\");\n    });\n    return i;\n  },\n  updateCategories: function () {\n    if (typeof Categories === \"undefined\" || Categories === null) return;\n    var i = 0;\n    Categories.find({slug: {$exists : false}}).forEach(function (category) {\n        i++;\n        var slug = Telescope.utils.slugify(category.name);\n        Categories.update(category._id, {$set: {slug: slug}});\n        console.log(\"---------------------\");\n        console.log(\"Category: \"+category.name);\n        console.log(\"Updating category with new slug: \"+slug);\n    });\n    return i;\n  },\n  updatePostCategories: function () {\n    if (typeof Categories === \"undefined\" || Categories === null) return;\n    var i = 0;\n    Posts.find().forEach(function (post) {\n      i++;\n      var oldCategories = post.categories;\n      var newCategories = [];\n      var category = {};\n      var updating = false; // by default, assume we're not going to do anything\n\n      // iterate over the post.categories array\n      // if the post has no categories then nothing will happen\n      _.each(oldCategories, function(value){\n        // make sure the categories are strings\n        if((typeof value === \"string\") && (category = Categories.findOne({name: value}))){\n          // if value is a string, then look for the matching category object\n          // and if it exists push it to the newCategories array\n          updating = true; // we're updating at least one category for this post\n          newCategories.push(category);\n        }else{\n          // if category A) is already an object, or B) it's a string but a matching category object doesn't exist\n          // just keep the current value\n          newCategories.push(value);\n        }\n      });\n\n      if(updating){\n        // update categories property on post\n        Posts.update(post._id, {$set: {categories: newCategories}});\n      }\n\n      // START CONSOLE LOGS\n      console.log(\"---------------------\");\n      console.log(\"Post: \"+post.title);\n      if(updating){\n        console.log(oldCategories.length+\" categories: \"+oldCategories);\n        console.log(\"Updating categories array to: \");\n        console.log(newCategories);\n      }else{\n        console.log(\"No updates\");\n      }\n      // END CONSOLE LOGS\n    });\n    return i;\n  },\n  updateUserProfiles: function () {\n    var i = 0;\n    var allUsers = Meteor.users.find();\n    console.log('> Found '+allUsers.count()+' users.\\n');\n\n    allUsers.forEach(function(user){\n      i++;\n      console.log('> Updating user '+user._id+' ('+user.username+')');\n\n      var properties = {};\n      properties.telescope = {};\n      // update user slug\n      if(Users.getUserName(user))\n        properties.slug = Telescope.utils.slugify(Users.getUserName(user));\n\n      // update user isAdmin flag\n      if(typeof user.isAdmin === 'undefined')\n        properties.isAdmin = false;\n\n      // update postCount\n      var postsByUser = Posts.find({userId: user._id});\n      properties.telescope.postCount = postsByUser.count();\n\n      // update commentCount\n      var commentsByUser = Comments.find({userId: user._id});\n      properties.telescope.commentCount = commentsByUser.count();\n\n      Meteor.users.update(user._id, {$set:properties});\n\n    });\n    return i;\n  },\n  resetUpvotesDownvotes: function () {\n    var i = 0;\n    Posts.find().forEach(function (post) {\n      i++;\n      var upvotes = 0,\n          downvotes = 0;\n      console.log(\"Post: \"+post.title);\n      if(post.upvoters){\n        upvotes = post.upvoters.length;\n        console.log(\"Found \"+upvotes+\" upvotes.\");\n      }\n      if(post.downvoters){\n        downvotes = post.downvoters.length;\n        console.log(\"Found \"+downvotes+\" downvotes.\");\n      }\n      Posts.update(post._id, {$set: {upvotes: upvotes, downvotes: downvotes}});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  resetCommentsUpvotesDownvotes: function () {\n    var i = 0;\n    Comments.find().forEach(function (comment) {\n      i++;\n      var upvotes = 0,\n          downvotes = 0;\n      console.log(\"Comment: \"+comment._id);\n      if(comment.upvoters){\n        upvotes = comment.upvoters.length;\n        console.log(\"Found \"+upvotes+\" upvotes.\");\n      }\n      if(comment.downvoters){\n        downvotes = comment.downvoters.length;\n        console.log(\"Found \"+downvotes+\" downvotes.\");\n      }\n      Comments.update(comment._id, {$set: {upvotes: upvotes, downvotes: downvotes}});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  headlineToTitle: function () {\n    var i = 0;\n    Posts.find({title: {$exists : false}}).forEach(function (post) {\n      i++;\n      console.log(\"Post: \"+post.headline+\" \"+post.title);\n      Posts.update(post._id, { $rename: { 'headline': 'title'}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  commentsSubmittedToCreatedAt: function () {\n    var i = 0;\n    Comments.find({createdAt: {$exists: false}}).forEach(function (comment) {\n      i++;\n      console.log(\"Comment: \"+comment._id);\n      Comments.update(comment._id, { $rename: { 'submitted': 'createdAt'}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  commentsPostToPostId: function () {\n    var i = 0;\n    Comments.find({postId: {$exists : false}}).forEach(function (comment) {\n      i++;\n      console.log(\"Comment: \"+comment._id);\n      Comments.update(comment._id, { $rename: { 'post': 'postId'}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  createdAtSubmittedToDate: function () {\n    var i = 0;\n    Posts.find().forEach(function (post) {\n      if(typeof post.submitted === \"number\" || typeof post.createdAt === \"number\"){\n        i++;\n        console.log(\"Posts: \"+post.title);\n        var createdAt = new Date(post.createdAt);\n        var submitted = new Date(post.submitted);\n        console.log(createdAt);\n        Posts.update(post._id, { $set: { 'createdAt': createdAt, submitted: submitted}}, {multi: true, validate: false});\n        console.log(\"---------------------\");\n      }\n    });\n    return i;\n  },\n  commentsCreatedAtToDate: function () {\n    var i = 0;\n    Comments.find().forEach(function (comment) {\n      if(typeof comment.createdAt === \"number\"){\n        i++;\n        console.log(\"Comment: \"+comment._id);\n        var createdAt = new Date(comment.createdAt);\n        console.log(createdAt);\n        Comments.update(comment._id, { $set: { 'createdAt': createdAt}}, {multi: true, validate: false});\n        console.log(\"---------------------\");\n      }\n    });\n    return i;\n  },\n  submittedToPostedAt: function () {\n    var i = 0;\n    Posts.find({postedAt: {$exists : false}}).forEach(function (post) {\n      i++;\n      console.log(\"Post: \"+post._id);\n      Posts.update(post._id, { $rename: { 'submitted': 'postedAt'}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  addPostedAtToComments: function () {\n    var i = 0;\n    Comments.find({postedAt: {$exists : false}}).forEach(function (comment) {\n      i++;\n      console.log(\"Comment: \"+comment._id);\n      Comments.update(comment._id, { $set: { 'postedAt': comment.createdAt}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  parentToParentCommentId: function () {\n    var i = 0;\n    Comments.find({parent: {$exists: true}, parentCommentId: {$exists : false}}).forEach(function (comment) {\n      i++;\n      console.log(\"Comment: \"+comment._id);\n      Comments.update(comment._id, { $set: { 'parentCommentId': comment.parent}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  addLastCommentedAt: function () {\n    var i = 0;\n    Posts.find({$and: [\n      {$or: [{comments: {$gt: 0}}, {commentCount: {$gt: 0}}]},\n      {lastCommentedAt: {$exists : false}}\n    ]}).forEach(function (post) {\n      i++;\n      console.log(\"Post: \"+post._id);\n      var postComments = Comments.find({$or: [{postId: post._id}, {post: post._id}]}, {sort: {postedAt: -1}}).fetch();\n      var lastComment;\n      if (_.isEmpty(postComments)) {\n        console.log('postComments from post '+post._id+' is empty. Skipping.');\n        return;\n      }\n      lastComment = postComments[0];\n      Posts.update(post._id, { $set: { lastCommentedAt: lastComment.postedAt}}, {multi: false, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  commentsToCommentCount: function () {\n    var i = 0;\n    Posts.find({comments: {$exists : true}, commentCount: {$exists : false}}).forEach(function (post) {\n      i++;\n      console.log(\"Post: \"+post._id);\n      Posts.update(post._id, { $set: { 'commentCount': post.comments}, $unset: { 'comments': ''}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  addCommentersToPosts: function () {\n    var i = 0;\n    Comments.find().forEach(function (comment) {\n      i++;\n      console.log(\"Comment: \"+comment._id);\n      console.log(\"Post: \"+comment.postId);\n      Posts.update(comment.postId, { $addToSet: { 'commenters': comment.userId}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  moveVotesFromProfile: function () {\n    var i = 0;\n    Meteor.users.find().forEach(function (user) {\n      i++;\n      console.log(\"User: \"+user._id);\n      Meteor.users.update(user._id, {\n        $rename: {\n          'profile.upvotedPosts': 'telescope.upvotedPosts',\n          'profile.downvotedPosts': 'telescope.downvotedPosts',\n          'profile.upvotedComments': 'telescope.upvotedComments',\n          'profile.downvotedComments': 'telescope.downvotedComments'\n        }\n      }, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  addHTMLBody: function () {\n    var i = 0;\n    Posts.find({body: {$exists : true}}).forEach(function (post) {\n      i++;\n      var htmlBody = Telescope.utils.sanitize(marked(post.body));\n      console.log(\"Post: \"+post._id);\n      Posts.update(post._id, { $set: { 'htmlBody': htmlBody}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  addHTMLComment: function () {\n    var i = 0;\n    Comments.find({body: {$exists : true}}).forEach(function (comment) {\n      i++;\n      var htmlBody = Telescope.utils.sanitize(marked(comment.body));\n      console.log(\"Comment: \"+comment._id);\n      Comments.update(comment._id, { $set: { 'htmlBody': htmlBody}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  clicksToClickCount: function () {\n    var i = 0;\n    Posts.find({\"clicks\": {$exists: true}, \"clickCount\": {$exists : false}}).forEach(function (post) {\n      i++;\n      console.log(\"Post: \" + post._id);\n      Posts.update(post._id, { $set: { 'clickCount': post.clicks}, $unset: { 'clicks': ''}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  commentsCountToCommentCount: function () {\n    var i = 0;\n    Posts.find({\"commentCount\": {$exists : false}}).forEach(function (post) {\n      i++;\n      console.log(\"Post: \" + post._id);\n      Posts.update({_id: post._id}, { $set: { 'commentCount': post.commentsCount}, $unset: {'commentsCount': \"\"}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  userDataCommentsCountToCommentCount: function(){\n    var i = 0;\n    Meteor.users.find({'commentCount': {$exists: false}}).forEach(function(user){\n      i++;\n      var commentCount = Comments.find({userId: user._id}).count();\n      console.log(\"User: \" + user._id);\n      Meteor.users.update(user._id, {$set: { telescope : {'commentCount': commentCount}}});\n      console.log(\"---------------------\");\n    });\n    return i;\n   },\n  clicksToClickCountForRealThisTime: function () { // since both fields might be co-existing, add to clickCount instead of overwriting it\n    var i = 0;\n    Posts.find({'clicks': {$exists: true}}).forEach(function (post) {\n      i++;\n      console.log(\"Post: \" + post._id);\n      Posts.update(post._id, { $inc: { 'clickCount': post.clicks}, $unset: {'clicks': \"\"}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  normalizeCategories: function () {\n    var i = 0;\n    Posts.find({'categories': {$exists: true}}).forEach(function (post) {\n      i++;\n      console.log(\"Post: \" + post._id);\n      var justCategoryIds = post.categories.map(function (category){\n        return category._id;\n      });\n      Posts.update(post._id, {$set: {categories: justCategoryIds, oldCategories: post.categories}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  cleanUpStickyProperty: function () {\n    var i = 0;\n    Posts.find({'sticky': {$exists: false}}).forEach(function (post) {\n      i++;\n      console.log(\"Post: \" + post._id);\n      Posts.update(post._id, {$set: {sticky: false}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  show0112ReleaseNotes: function () {\n    var i = 0;\n    // if this is the 0.11.2 update, the first run event will not exist yet.\n    // if that's the case, make sure to still show release notes\n    if (!Events.findOne({name: 'firstRun'})) {\n      Releases.update({number:'0.11.2'}, {$set: {read:false}});\n    }\n    return i;\n  },\n  removeThumbnailHTTP: function () {\n    var i = 0;\n    Posts.find({thumbnailUrl: {$exists : true}}).forEach(function (post) {\n      i++;\n      var newThumbnailUrl = post.thumbnailUrl.replace(\"http:\", \"\");\n      console.log(\"Post: \"+post._id);\n      Posts.update(post._id, { $set: { 'thumbnailUrl': newThumbnailUrl}}, {multi: true, validate: false});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  updateUserNames: function () {\n    var i = 0;\n    var allUsers = Meteor.users.find({username: {$exists: true}, profile: {$exists: true}, 'profile.isDummy': {$ne: true}});\n\n    console.log('> Found '+allUsers.count()+' users.\\n');\n\n    allUsers.forEach(function(user){\n      i++;\n\n      // Perform the same transforms done by useraccounts with `lowercaseUsernames` set to `true`\n      var oldUsername = user.username;\n      var username = user.username;\n      username = username.trim().replace(/\\s+/gm, ' ');\n      user.profile.username = user.profile.name || username;\n      delete user.profile.name;\n      username = username.toLowerCase().replace(/\\s+/gm, '');\n      user.username = username;\n\n      if (user.emails && user.emails.length > 0) {\n        _.each(user.emails, function(email){\n          email.address = email.address.toLowerCase().replace(/\\s+/gm, '');\n        });\n      }\n\n      console.log('> Updating user '+user._id+' ('+oldUsername+' -> ' + user.username + ')');\n\n      try {\n        Meteor.users.update(user._id, {\n          $set: {\n            emails: user.emails,\n            profile: user.profile,\n            username: user.username,\n          },\n        });\n      }\n      catch (err) {\n        console.warn('> Unable to convert username ' + user.username + ' to lowercase!');\n        console.warn('> Please try to fix it by hand!! :(');\n      }\n    });\n    return i;\n  },\n  changeColorNames: function () {\n    var i = 0;\n    var settings = Settings.findOne();\n    var set = {};\n\n    if (!!settings) {\n\n      if (!!settings.buttonColor)\n        set.accentColor = settings.buttonColor;\n\n      if (!!settings.buttonTextColor)\n        set.accentContrastColor = settings.buttonTextColor;\n\n      if (!!settings.buttonColor)\n        set.secondaryColor = settings.headerColor;\n\n      if (!!settings.buttonColor)\n        set.secondaryContrastColor = settings.headerTextColor;\n\n      if (!_.isEmpty(set)) {\n        Settings.update(settings._id, {$set: set}, {validate: false});\n      }\n\n    }\n    return i;\n  },\n  migrateUserProfiles: function () {\n    var i = 0;\n    var allUsers = Meteor.users.find({telescope: {$exists: false}});\n    console.log('> Found '+allUsers.count()+' users.\\n');\n\n    allUsers.forEach(function(user){\n      i++;\n\n      console.log('> Updating user '+user._id+' (' + user.username + ')');\n\n      var telescopeUserData = {};\n\n      // loop over user data schema\n      _.each(Telescope.schemas.userData._schema, function (property, key) {\n\n        if (!!user[key]) { // look for property on root of user object\n          telescopeUserData[key] = user[key];\n        } else if (user.votes && !!user.votes[key]) { // look for it in user.votes object\n          telescopeUserData[key] = user.votes[key];\n        } else if (user.profile && user.profile[key]) { // look for it in user.profile object\n          telescopeUserData[key] = user.profile[key];\n        }\n        \n      });\n\n      // console.log(telescopeUserData);\n\n      try {\n        Meteor.users.update(user._id, {\n          $set: {\n            telescope: telescopeUserData\n          }\n        });\n      } catch (err) {\n        console.log(err);\n        console.warn('> Unable to migrate profile for user ' + user.username);\n      }\n    });\n    return i;\n  },\n  migrateEmailHash: function () {\n    var i = 0;\n    var allUsers = Meteor.users.find({$and: [{\"email_hash\": {$exists: true}}, {\"telescope.emailHash\": {$exists: false}}]});\n    console.log('> Found '+allUsers.count()+' users.\\n');\n\n    allUsers.forEach(function(user){\n      i++;\n\n      console.log('> Updating user '+user._id+' (' + user.username + ')');\n\n      var emailHash = user.email_hash;\n      if (!!emailHash) {\n        Meteor.users.update(user._id, {$set: {\"telescope.emailHash\": emailHash}});\n      }\n    });\n    return i;\n  },\n  // addTopLevelCommentIdToComments: function() {\n  //   var i = 0;\n\n  //   // find all root comments and set topLevelCommentId on their root children\n  //   Comments.find({parentCommentId: {$exists : false}}).forEach(function (comment) {\n      \n  //     // topLevelCommentId is the root comment._id\n  //     var topLevelCommentId = comment._id;\n  //     console.log(\"Root Comment found: \" + topLevelCommentId);\n      \n  //     // find childComments that have this root comment as parentCommentId\n  //     Comments.find({parentCommentId: comment._id}).forEach(function (childComment) {\n  //       i++;\n  //       updateParentAndChild(topLevelCommentId, childComment._id);\n  //     });\n    \n  //   });\n    \n  //   function updateParentAndChild(topLevelCommentId, parentId) {\n    \n  //     i++;\n  //     console.log(\"Parent Comment: \" + parentId, \" top level comment \" + topLevelCommentId);\n     \n  //     Comments.update(parentId, {$set: {'topLevelCommentId': topLevelCommentId}}, {multi: false, validate: false});\n    \n  //     var childComments = Comments.find({topLevelCommentId: {$exists : false}, parentCommentId: parentId});\n    \n  //     console.log('> Found '+childComments.count()+' child comments.\\n');\n    \n  //     childComments.forEach(function(childComment){\n  //       i++;\n    \n  //       // find all nested childComments and set topLevelCommentId\n  //       console.log(\"Child Comment: \" + childComment._id, \" top level comment \" + topLevelCommentId);\n    \n  //       // set nested childComment to use parent's topLevelCommentId\n  //       Comments.update(childComment._id, {$set: {'topLevelCommentId': topLevelCommentId}}, {multi: false, validate: false});\n  //       updateParentAndChild(topLevelCommentId, childComment._id, true);\n  //     });\n    \n  //   }\n  //   console.log(\"---------------------\");\n  //   return i;\n  // },\n  migrateDisplayName: function () {\n    var i = 0;\n    var displayName;\n    var allUsers = Meteor.users.find({\"telescope.displayName\": {$exists: false}});\n    console.log('> Found '+allUsers.count()+' users.\\n');\n\n    allUsers.forEach(function(user){\n      i++;\n\n      console.log('> Updating user '+user._id+' (' + user.username + ')');\n      if (!!user.profile) {\n        displayName = user.profile.name || user.profile.username;\n      } else {\n        displayName = user.username;\n      }\n\n      console.log('name: ', displayName);\n      if (!!displayName) {\n        Meteor.users.update(user._id, {$set: {\"telescope.displayName\": displayName}});\n      } else {\n        console.log(\"displayName not found :(\");\n      }\n    });\n    return i;\n  },  \n  migrateNewsletterSettings: function () {\n    var i = 0;\n    var allUsers = Meteor.users.find({\n      $or: [\n        {\"profile.showBanner\": {$exists: true}},\n        {\"profile.subscribedToNewsletter\": {$exists: true}}\n      ]\n    });\n    console.log('> Found '+allUsers.count()+' users.\\n');\n\n    allUsers.forEach(function(user){\n      i++;\n      var displayName;\n\n      if (!!user.profile) {\n        displayName = user.profile.name || user.profile.username;\n      } else {\n        displayName = user.username;\n      }\n\n      console.log('> Updating user '+user._id+' (' + displayName + ')');\n\n      if (user.profile) {\n\n        var set = {};\n\n        var showBanner = user.profile.showBanner;\n        if (typeof showBanner !== \"undefined\") {\n          set[\"telescope.newsletter.showBanner\"] = showBanner;\n        }\n\n        var subscribeToNewsletter = user.profile.subscribedToNewsletter;\n        if (typeof subscribeToNewsletter !== \"undefined\") {\n          set[\"telescope.newsletter.subscribeToNewsletter\"] = subscribeToNewsletter;\n        }\n        console.log(set)\n        if (!_.isEmpty(set)) {\n          Meteor.users.update(user._id, {$set: set});\n        }\n\n      }\n\n    });\n    return i;\n  },\n  addSlugsToPosts: function () {\n    var i = 0;\n    Posts.find({slug: {$exists : false}}).forEach(function (post) {\n      i++;\n      var slug = Telescope.utils.slugify(post.title);\n      console.log(\"Post: \"+post._id + \" | \"+slug);\n      Posts.update(post._id, { $set: { 'slug': slug}});\n      console.log(\"---------------------\");\n    });\n    return i;\n  },\n  updateNewsletterFrequency: function () {\n    var i = 0;\n    Settings.find().forEach(function (setting) {\n      if (!!setting.newsletterFrequency) {\n        console.log(\"Migrating newsletter frequencyâ€¦ (\"+setting.newsletterFrequency+\")\");\n        i++;\n        var days;\n        switch (setting.newsletterFrequency) {\n          case 1:\n            days = [1,2,3,4,5,6,7];\n            break;\n          case 2:\n            days = [2,4,6];\n            break;\n          case 3:\n            days = [2,5];\n            break;\n          default:\n            days = [2];\n            break;\n        }\n        Settings.update(setting._id, { $set: { newsletterFrequency: days } });\n      }\n    });\n    return i;\n  },\n  changeOutsideLinksPointTo: function () {\n    var i = 0;\n    Settings.find({outsideLinksPointTo: {$exists : true}}).forEach(function (setting) {\n      i++;\n      Settings.update(setting._id, {$set: {RSSLinksPointTo: setting.outsideLinksPointTo}});\n    });\n    return i;\n  }\n};\n"]}