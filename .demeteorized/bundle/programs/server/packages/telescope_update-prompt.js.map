{"version":3,"sources":["meteor://ðŸ’»app/lib/package_versions.js","meteor://ðŸ’»app/lib/server/phone_home.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,CAAC,OAAO,CAAC;AACb,oBAAkB,EAAE,YAAY;AAC9B,QAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,UAAI,GAAG,GAAG,iDAAiD,CAAC;AAC5D,UAAI,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,UAAU,WAAW,EAAC;AACjE,eAAO,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;OAChD,CAAC,CAAC;AACH,UAAI,CAAC,OAAO,CAAC;AACb,UAAI;AACF,YAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;AACzB,iBAAO,EAAE;AACP,oBAAQ,EAAE,kBAAkB;WAC7B;AACD,gBAAM,EAAE;AACN,iBAAK,EAAE,YAAY;WACpB;SACF,CAAC,CAAC;;AAEH,YAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC7C,YAAI,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,UAAU,OAAO,EAAC;AAClD,iBAAO;AACL,gBAAI,EAAE,OAAO,CAAC,IAAI;AAClB,yBAAa,EAAE,OAAO,CAAC,aAAa,CAAC,OAAO;AAC5C,0BAAc,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC;WACnE,CAAC;SACH,CAAC,CAAC;AACH,eAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,eAAO,WAAW,CAAC;OACpB,CAAC,OAAO,CAAC,EAAE;AACV,eAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AACd,eAAO,CAAC,CAAC;OACV;KACF;GACF;CACF,CAAC,CAAC,+E;;;;;;;;;;;;;;;;;;AClCH,MAAM,CAAC,OAAO,CAAC;AACb,WAAS,EAAE,YAAa;;AAEtB,QAAI,GAAG,GAAG,kCAAkC,CAAC;;AAE7C,QAAG,MAAM,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAC;;AAEhD,UAAI,MAAM,GAAG;AACX,sBAAc,EAAE,SAAS,CAAC,OAAO;AACjC,iBAAS,EAAE,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC;AAChC,eAAO,EAAE,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE;AACrC,aAAK,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;AAClC,aAAK,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;AAC3B,gBAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;OAClC,CAAC;;AAEF,UAAI,CAAC,OAAO,EAAE,CAAC;AACf,UAAI;AACF,YAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;AACzB,gBAAM,EAAE,MAAM;SACf,CAAC,CAAC;AACH,eAAO,MAAM,CAAC;OACf,CAAC,OAAO,CAAC,EAAE;;AAEV,eAAO,KAAK,CAAC;OACd;KACF;GACF;CACF,CAAC,CAAC,+E","file":"/packages/telescope_update-prompt.js","sourcesContent":["Meteor.methods({\n  getPackageVersions: function () {\n    if (Meteor.isServer) {\n      var url = \"https://atmospherejs.com/a/packages/findByNames\";\n      var packageNames = _.filter(_.keys(Package), function (packageName){\n        return packageName.indexOf(\"telescope\") !== -1;\n      });\n      this.unblock;\n      try {\n        var result = HTTP.get(url, {\n          headers: {\n            \"Accept\": \"application/json\"\n          },\n          params: {\n            names: packageNames\n          }\n        });\n        // console.log(result);\n        var packageData = JSON.parse(result.content);\n        var versionData = packageData.map(function (package){\n          return {\n            name: package.name,\n            latestVersion: package.latestVersion.version,\n            currentVersion: MeteorFilesHelpers.getPackageVersion(package.name)\n          };\n        });\n        console.log(versionData);\n        return versionData;\n      } catch (e) {\n        console.log(e)\n        return e;\n      }\n    }\n  }\n});\n","Meteor.methods({\n  phoneHome: function  () {\n\n    var url = 'http://version.telescopeapp.org/';\n\n    if(Meteor.user() && Users.is.admin(Meteor.user())){\n    \n      var params = {\n        currentVersion: Telescope.VERSION,\n        siteTitle: Settings.get('title'),\n        siteUrl: Telescope.utils.getSiteUrl(),\n        users: Meteor.users.find().count(),\n        posts: Posts.find().count(),\n        comments: Comments.find().count()\n      };\n    \n      this.unblock();\n      try {\n        var result = HTTP.get(url, {\n          params: params\n        });\n        return result;\n      } catch (e) {\n        // Got a network error, time-out or HTTP error in the 400 or 500 range.\n        return false;\n      }\n    }\n  }\n});"]}