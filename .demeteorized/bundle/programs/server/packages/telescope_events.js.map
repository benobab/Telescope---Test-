{"version":3,"sources":["meteor://ðŸ’»app/lib/events.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;;AAExC,MAAM,CAAC,MAAM,GAAG,IAAI,YAAY,CAAC;AAC/B,WAAS,EAAE;AACT,QAAI,EAAE,IAAI;GACX;AACD,MAAI,EAAE;AACJ,QAAI,EAAE,MAAM;GACb;AACD,aAAW,EAAE;AACX,QAAI,EAAE,MAAM;AACZ,YAAQ,EAAE,IAAI;GACf;AACD,QAAM,EAAE;AACN,QAAI,EAAE,OAAO;AACb,YAAQ,EAAE,IAAI;GACf;AACD,WAAS,EAAE;AACT,QAAI,EAAE,OAAO;AACb,YAAQ,EAAE,IAAI;GACf;AACD,YAAU,EAAE;AACV,QAAI,EAAE,MAAM;AACZ,YAAQ,EAAE,IAAI;AACd,YAAQ,EAAE,IAAI;GACf;CACF,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,YAAU;;AAEvB,QAAM,CAAC,gBAAgB,EAAE,CAAC;CAC3B,CAAC,CAAC;;AAEH,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;AAEnC,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,QAAM,CAAC,GAAG,GAAG,UAAU,KAAK,EAAE;;;AAG5B,QAAI,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAC,CAAC,EAAE;AAC1D,aAAO;KACR;;AAED,SAAK,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;;AAE7B,UAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;GAEtB,CAAC;CACH;;AAED,MAAM,CAAC,KAAK,GAAG,UAAS,KAAK,EAAE,UAAU,EAAC;;AAExC,YAAU,GAAG,UAAU,IAAI,EAAE,CAAC;;;AAG9B,MAAG,MAAM,CAAC,QAAQ,EAAC;AACjB,QAAG,OAAO,QAAQ,KAAK,WAAW,IAAI,OAAO,QAAQ,CAAC,KAAK,KAAK,WAAW,EAAC;AAC1E,cAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;KACnC;AACD,QAAG,OAAO,SAAS,KAAK,WAAW,IAAI,OAAO,SAAS,CAAC,cAAc,KAAK,WAAW,EAAC;AACrF,eAAS,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;KACxE;GACF;CACF,CAAC,+F","file":"/packages/telescope_events.js","sourcesContent":["Events = new Mongo.Collection('events');\n\nEvents.schema = new SimpleSchema({\n  createdAt: {\n    type: Date\n  },\n  name: {\n    type: String\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  unique: {\n    type: Boolean,\n    optional: true\n  },\n  important: { // marking an event as important means it should never be erased\n    type: Boolean,\n    optional: true\n  },\n  properties: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n});\n\nMeteor.startup(function(){\n  // needs to happen after every fields are added\n  Events.internationalize();\n});\n\nEvents.attachSchema(Events.schema);\n\nif (Meteor.isServer) {\n  Events.log = function (event) {\n\n    // if event is supposed to be unique, check if it has already been logged\n    if (!!event.unique && !!Events.findOne({name: event.name})) {\n      return;\n    }\n\n    event.createdAt = new Date();\n\n    Events.insert(event);\n\n  };\n}\n\nEvents.track = function(event, properties){\n  // console.log('trackevent: ', event, properties);\n  properties = properties || {};\n  //TODO\n  // add event to an Events collection for logging and buffering purposes\n  if(Meteor.isClient){\n    if(typeof mixpanel !== 'undefined' && typeof mixpanel.track !== 'undefined'){\n      mixpanel.track(event, properties);\n    }\n    if(typeof GoSquared !== 'undefined' && typeof GoSquared.DefaultTracker !== 'undefined'){\n      GoSquared.DefaultTracker.TrackEvent(event, JSON.stringify(properties));\n    }\n  }\n};\n"]}